import { ethers } from "hardhat";
import { ContractTransaction, Signer, TransactionResponse } from "ethers";
import { IToken } from "../typechain-types";

async function main() {
    const hero: Signer = await ethers.getSigners().then(
        (signers: Signer[]): Signer => signers[0]
    );
    const heroAddr: string = await hero.getAddress();
    console.log("HERO:", heroAddr, ethers.formatEther(await ethers.provider.getBalance(heroAddr)));

    const create: TransactionResponse = await hero.sendTransaction({
        type: 2,
        data: "",
    });
    const address: string = ethers.getCreateAddress(create);
    console.log("ADDR:", address);

    // const address: string = "0x32BD158B9fbfC21FbB4E5d67A3aBc475b4343c59";
    const token: IToken = await ethers.getContractAt("IToken", address)

    // console.log(await token.connect(hero).mint());
    // const tx: ContractTransaction = await token.mint.populateTransaction({ value: 1 });
    // await hero.sendTransaction(tx);

    console.log(await token.balanceOf(heroAddr), await token.totalSupply());
    await token.connect(hero).mint();
    console.log(await token.balanceOf(heroAddr), await token.totalSupply());
    await token.connect(hero).mint();
    console.log(await token.balanceOf(heroAddr), await token.totalSupply());
    await token.connect(hero).mint();
    console.log(await token.balanceOf(heroAddr), await token.totalSupply());
    await token.connect(hero).mint();
    console.log(await token.balanceOf(heroAddr), await token.totalSupply());

    const SPENDER: string = "0x4838B106FCe9647Bdf1E7877BF73cE8B0BAD5f97";
    console.log("allowance before:", await token.allowance(heroAddr, SPENDER));
    await token.connect(hero).approve(SPENDER, 0x100);
    console.log("allowance after:", await token.allowance(heroAddr, SPENDER));

    // console.log("BEFORE:", await token.totalSupply());

    // console.log("DATA:", tx.data);
    // const result: TransactionResponse =
  
    // // const result = await token.something.send();
    // // const result: string = await hero.call(tx);
    // // console.log("RESULT:", result);
    // // console.log("RESULT.DATA:", result.data);

    // console.log("AFTER:", await token.totalSupply());

    // console.log(await ethers.provider.getStorage(address, 0));

    // console.log("BALANCE:", await token.balanceOf(heroAddr));
    // console.log("BALANCE:", await token.balanceOf.populateTransaction(heroAddr));
}

main().then(
    () => process.exit(0),
    (reason: any) => {
        console.error(reason);
        process.exit(1);
    }
);
