(defun f (a b c) (- (/ a b) c))

;; (return (f 0x100 0x20 1))

(return (and 0x30 0x20 (f 0x100 0x20 1)))

(selector "pause()") ;; 0x8456cb59

;; (defun f (a b) (+ a b))

;; ;; Functions are not payable.

;; ;; (when (call-value)
;; ;;   (revert 1))

;; (defconst *qwe* nil)
;; (defconst *yes* 0x20)
;; (defconst *no* 0x30)

;; (unless t
;;   (revert 123))

;; (return (if *qwe* *yes* *no*))

;; (gas-limit)
;; (gas-limit)
;; (gas-limit)
;; (gas-limit)
;; (gas-limit)

;; (return (f 10))

;; ;; (return (program-counter))
;; (return (memory-size))

;; ;; ;; ;; Functions are not payable.
;; (when (call-value)
;;   (revert))

;; ;; ;; ;; Revert if contract is called with a data shorter than at least 4
;; ;; ;; ;; bytes.
;; (when (< (calldata-size) 4)
;;   (revert))

;; ;; ;; ;; check if the leftmost 4 bytes of the calldata match the function
;; ;; ;; ;; selector of "something()".
;; (when (= (>> (calldata-load 0) 0xe0) 0xa7a0d537)
;;   (return 0x10))

;; ;; ;; (revert)
